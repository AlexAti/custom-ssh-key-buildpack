#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Generates an SSH config file for connections if a config var exists.

BUILD_DIR=$1
ENV_DIR=$3
BP_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd) # Buildpack dir is not build dir. See https://github.com/heroku/heroku-buildpack-clojure/pull/66 for more details

if [[ -f $ENV_DIR/CUSTOM_SSH_KEY && -f $ENV_DIR/CUSTOM_SSH_KEY_HOSTS ]]; then

  echo "" >&1

  # Ensure we have an ssh folder
  if [ ! -d ~/.ssh ]; then
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
  fi

  # Load the private key into custom_key file.
  base64 --decode $ENV_DIR/CUSTOM_SSH_KEY > ~/.ssh/custom_key

  # Change the permissions on the file to
  # be read-only for this user.
  chmod 400 ~/.ssh/custom_key

  # Split $CUSTOM_SSH_KEY_HOSTS
  IFS=',' ;for element in `cat $ENV_DIR/CUSTOM_SSH_KEY_HOSTS`;
  do
    echo -e "Host $element\n"\
            "  IdentityFile ~/.ssh/custom_key\n"\
            "  IdentitiesOnly yes\n"\
            "  UserKnownHostsFile=~/.ssh/known_hosts\n"\
            "  StrictHostKeyChecking no"\
            >> ~/.ssh/config
    ssh-keyscan -H -t rsa $element >> ~/.ssh/known_hosts
  done
  
  # Add the key to ssh agent
  eval "$(ssh-agent -s)"
  echo "#!/usr/bin/env bash" >> $BP_DIR/export
  echo "echo \"-----> Retrieving ssh-agent environment variables...\"" >> $BP_DIR/export
  echo "export SSH_AGENT_PID=\"$SSH_AGENT_PID\"" >> $BP_DIR/export
  echo "export SSH_AUTH_SOCK=\"$SSH_AUTH_SOCK\"" >> $BP_DIR/export
  ssh-add ~/.ssh/custom_key

  echo "-----> Successfully added custom SSH key"

fi
